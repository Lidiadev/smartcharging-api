// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(SmartChargingDbContext))]
    partial class SmartChargingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.chargestationseq", "'chargestationseq', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.connectorseq", "'connectorseq', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.groupseq", "'groupseq', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Groups.ChargeStation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "chargestationseq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("ChargeStation");
                });

            modelBuilder.Entity("Domain.Groups.Connector", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "connectorseq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<long?>("ChargeStationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ChargeStationId1")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ChargeStationId");

                    b.HasIndex("ChargeStationId1");

                    b.ToTable("Connector");
                });

            modelBuilder.Entity("Domain.Groups.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "groupseq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Domain.Groups.ChargeStation", b =>
                {
                    b.HasOne("Domain.Groups.Group", null)
                        .WithMany("ChargeStations")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Groups.Connector", b =>
                {
                    b.HasOne("Domain.Groups.ChargeStation", null)
                        .WithMany("Connector")
                        .HasForeignKey("ChargeStationId");

                    b.HasOne("Domain.Groups.ChargeStation", null)
                        .WithMany("Connectors")
                        .HasForeignKey("ChargeStationId1");

                    b.OwnsOne("Domain.Groups.Ampere", "MaxCurrent", b1 =>
                        {
                            b1.Property<long>("ConnectorId")
                                .HasColumnType("bigint");

                            b1.Property<int>("Value")
                                .HasColumnName("MaxCurrent")
                                .HasColumnType("int");

                            b1.HasKey("ConnectorId");

                            b1.ToTable("Connector");

                            b1.WithOwner()
                                .HasForeignKey("ConnectorId");
                        });
                });

            modelBuilder.Entity("Domain.Groups.Group", b =>
                {
                    b.OwnsOne("Domain.Groups.Ampere", "Capacity", b1 =>
                        {
                            b1.Property<long>("GroupId")
                                .HasColumnType("bigint");

                            b1.Property<int>("Value")
                                .HasColumnName("Capacity")
                                .HasColumnType("int");

                            b1.HasKey("GroupId");

                            b1.ToTable("Groups");

                            b1.WithOwner()
                                .HasForeignKey("GroupId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
